AWSTemplateFormatVersion: "2010-09-09"
Mappings:
  RegionMap:
    us-east-1:
      vpcId: vpc-0610446fafca4df10
      subnetId: subnet-0017c4a5e72ed567f
      imageId: ami-04169656fea786776
    us-east-2:
      vpcId: vpc-9aa942f3
      subnetId: subnet-8332c4ea
      imageId: ami-0552e3455b9bc8d50
    us-west-1:
      vpcId: vpc-0c00d304ac554a97f
      subnetId: subnet-05a1407456ad0c8e8
      imageId: ami-059e7901352ebaef8
    us-west-2:
      vpcId: vpc-8bc484f2
      subnetId: subnet-ebc60ca0
      imageId: ami-51537029
Resources:
  # EC2Wizard: 
  #   Type: AWS::EC2::Instance
  #   Properties: 
  #     ImageId: !FindInMap [ RegionMap, !Ref "AWS::Region", imageId ]
  #     InstanceType: t2.small
  #     KeyName: lab8-su-jmd
  #     SubnetId: !FindInMap [ RegionMap, !Ref "AWS::Region", subnetId ]
  #     SecurityGroupIds: [ !Ref SecurityGroup ]
  # EIP:
  #   Type: AWS::EC2::EIP
  #   Properties:
  #     InstanceId: !Ref EC2Wizard

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: EC2LaunchTemplate
      LaunchTemplateData:
        KeyName: lab8-su-jmd
        SecurityGroupIds:
          - !GetAtt SecurityGroup.GroupId
        InstanceType: t2.small
        IamInstanceProfile: 
          Name: !Ref InstanceProfile
        UserData: 
          Fn::Base64: !Sub | 
            #!/bin/bash -xe
            mkdir /aws-cfn-bootstrap-latest
            cd /aws-cfn-bootstrap-latest
            wget https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/amd64/latest/amazon-cloudwatch-agent.deb
            wget https://s3.amazonaws.com/stelligent-u-812-jason.davis.labs/wizard.json
            dpkg -i -E ./amazon-cloudwatch-agent.deb
            /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -c file:/aws-cfn-bootstrap-latest/wizard.json -s

  EC2:
    Type: AWS::EC2::Instance
    Properties: 
      KeyName: lab8-su-jmd
      LaunchTemplate: 
        LaunchTemplateId: !Ref LaunchTemplate
        Version: "1"
      ImageId: !FindInMap [ RegionMap, !Ref "AWS::Region", imageId ]

  EIP:
    Type: AWS::EC2::EIP
    Properties:
      InstanceId: !Ref EC2

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      Roles:
        - !Ref RoleCloudWatch
  RoleCloudWatch:
    Type: AWS::IAM::Role
    Properties: 
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy
        - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Principal: 
              Service: 
                - "ec2.amazonaws.com"
            Action: 
              - "sts:AssumeRole"
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Topic 5 - EC2 Lab
      VpcId: !FindInMap [ RegionMap, !Ref "AWS::Region", vpcId ]
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
          
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: "stelligent-u-812-jason.davis.labs"
      LifecycleConfiguration:
              Rules:
                - Id: LabLifecycle
                  AbortIncompleteMultipartUpload:
                    DaysAfterInitiation: 3
                  NoncurrentVersionExpirationInDays: 14
                  Status: Enabled
                  Transitions:
                    - StorageClass: STANDARD_IA
                      TransitionInDays: 30
