AWSTemplateFormatVersion: 2010-09-09
Description:  "lesson 4"

Parameters:
  ec2amiid: 
    Type: String
  r2ec2amiid: 
    Type: String
  instancetype:
    Type: String
  keypairname:
    Type: String
  r1cidr:
    Type: String
  r2cidr:
    Type: String
  r1vpcid:
    Type: String
  r2vpcid:
    Type: String
  r1peerid:
    Type: String

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.16.0.0/16
      Tags:
        - Key: user
          Value: "jason.davis.labs"
        - Key: stelligent-u-lesson
          Value: "4.1"
        - Key: stelligent-u-lab
          Value: "4.1.1"


  Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: 172.16.1.0/24
      Tags:
        - Key: user
          Value: "jason.davis.labs"
        - Key: stelligent-u-lesson
          Value: "4.1"
        - Key: stelligent-u-lab
          Value: "4.1.1 upd"

  NATSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      #!ImportValue "jmd-020201215-001-vpc"
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: 172.16.2.0/24
      Tags:
        - Key: user
          Value: "jason.davis.labs"
        - Key: stelligent-u-lesson
          Value: "4.1"
        - Key: stelligent-u-lab
          Value: "4.1.7"
          
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: user
          Value: "jason.davis.labs"
        - Key: stelligent-u-lesson
          Value: "4.1"
        - Key: stelligent-u-lab
          Value: "4.1.2"

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: user
          Value: "jason.davis.labs"
        - Key: stelligent-u-lesson
          Value: "4.1"
        - Key: stelligent-u-lab
          Value: "4.1.2"

  PublicRouteTableSubnetAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref Subnet

  PublicRouteTableSubnetAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref NATSubnet

  PublicRoute:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref PublicRouteTable
        DestinationCidrBlock: '0.0.0.0/0'
        GatewayId:
          Ref: InternetGateway

  SubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: Subnet
      RouteTableId:
        Ref: PublicRouteTable

  NATSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: NATSubnet
      RouteTableId:
        Ref: PublicRouteTable

  NetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: user
          Value: "jason.davis.labs"
        - Key: stelligent-u-lesson
          Value: "4.1"
        - Key: stelligent-u-lab
          Value: "4.1.8"

  NATNetworkAcl:
    Type: AWS::EC2::NetworkAcl
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: user
          Value: "jason.davis.labs"
        - Key: stelligent-u-lesson
          Value: "4.1"
        - Key: stelligent-u-lab
          Value: "4.1.8"

  InboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NetworkAcl
      RuleNumber: 100
      Protocol: 6
      RuleAction: allow
#      CidrBlock: 100.27.39.176/32
      CidrBlock: 18.205.7.57/32
      PortRange:
        From: 22
        To: 22
  InboundRuleandbackagain:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NetworkAcl
      RuleNumber: 120
      Protocol: 6
      RuleAction: allow
      CidrBlock: 172.16.2.0/24
      PortRange:
        From: 0
        To: 65535
  InboundRuleandbackagainicmp:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NetworkAcl
      RuleAction: allow
      CidrBlock: 172.16.2.0/24
      RuleNumber: 123
      Protocol: "1"
      Icmp:
        Code: "-1"
        Type: "-1"
  InboundRuleandbackagainicmpPeer:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NetworkAcl
      RuleAction: allow
      CidrBlock: 10.10.0.0/16
      RuleNumber: 133
      Protocol: "-1"
      Icmp:
        Code: "-1"
        Type: "-1"
  OutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0

  NATInboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NATNetworkAcl
      RuleNumber: 101
      Protocol: 6
      RuleAction: allow
      CidrBlock: 172.16.1.0/24
      PortRange:
        From: 22
        To: 22
  NATInboundRulehttp:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NATNetworkAcl
      RuleNumber: 180
      Protocol: 6
      RuleAction: allow
      CidrBlock: 172.16.1.0/24
      PortRange:
        From: 80
        To: 80
  NATInboundRuleicmp:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NATNetworkAcl
      RuleNumber: 102
      Protocol: "1"
      Icmp:
        Code: "-1"
        Type: "-1"
      RuleAction: allow
      CidrBlock: 172.16.1.0/24

  NATOutboundRule:
    Type: AWS::EC2::NetworkAclEntry
    Properties:
      NetworkAclId: !Ref NATNetworkAcl
      RuleNumber: 101
      Protocol: -1
      Egress: true
      RuleAction: allow
      CidrBlock: 0.0.0.0/0

  SubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref Subnet
      NetworkAclId: !Ref NetworkAcl

  NATSubnetNetworkAclAssociation:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref NATSubnet
      NetworkAclId: !Ref NATNetworkAcl

  NATEIP:
    Type: AWS::EC2::EIP

  NAT:
    Type: AWS::EC2::NatGateway
    Properties:
        AllocationId: !GetAtt NATEIP.AllocationId
        SubnetId: !Ref NATSubnet
        Tags:
          - Key: user
            Value: "jason.davis.labs"
          - Key: stelligent-u-lesson
            Value: "4.1"
          - Key: stelligent-u-lab
            Value: "4.1.7"

  NATPublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: user
          Value: "jason.davis.labs"
        - Key: stelligent-u-lesson
          Value: "4.1"
        - Key: stelligent-u-lab
          Value: "4.1.7"

  NATPublicRoute:
      Type: AWS::EC2::Route
      Properties:
        RouteTableId: !Ref NATPublicRouteTable
        NatGatewayId: !Ref NAT
        DestinationCidrBlock: '0.0.0.0/0'
         
Outputs:
  VPC:
    Description: vpc for other CF templates
    Value: !Ref VPC
    Export:
      Name: !Sub ${AWS::StackName}-vpc
  Subnet:
    Description: subnet for other CF templates
    Value: !Ref Subnet
    Export:
      Name: !Sub ${AWS::StackName}-subnet
  NATSubnet:
    Description: natsubnet for other CF templates
    Value: !Ref NATSubnet
    Export:
      Name: !Sub ${AWS::StackName}-natsubnet
  PublicRouteTable:
    Description: routetable for other CF templates
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub ${AWS::StackName}-routetable