AWSTemplateFormatVersion: 2010-09-09
Description: lab 9.1.3 lambda from s3
Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${AWS::StackName}
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AWS::StackName}
      Role:
        Fn::GetAtt:
        - LambdaRole
        - Arn
      Runtime: python3.7
      Handler: lambda_function.lab913
      # CodeUri: /home/ec2-user/environment/su-jmd-020201208/09-lambda/app/lambda_function.py
      Code:
        S3Bucket: stelligent-u-913-jmd
        S3Key: ee2bb26b98a0d96bfaba98eb8fb924f7
  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: hello aws api gw
      FailOnWarnings: true
      Name: jmd
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Fn::GetAtt:
        - LambdaFunction
        - Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*/POST/
  APIMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: POST
      RestApiId:
        Ref: ApiGateway
      ResourceId:
        Fn::GetAtt:
        - ApiGateway
        - RootResourceId
      AuthorizationType: NONE
      MethodResponses:
      - StatusCode: 200
      Integration:
        Type: AWS
        Uri:
          Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations
        IntegrationHttpMethod: POST
        IntegrationResponses:
        - StatusCode: 200
  APIDeployment:
    DependsOn: APIMethod
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: ApiGateway
      StageName: jmd
