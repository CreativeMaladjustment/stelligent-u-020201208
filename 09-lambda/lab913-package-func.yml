AWSTemplateFormatVersion: 2010-09-09
Description: "lab 9.1.3 lambda from s3"

Resources:
  LambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}"
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
            
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}"
      Role: !GetAtt LambdaRole.Arn
      Runtime: python3.7
      Handler: lambda_function.lab913
      CodeUri: /home/ec2-user/environment/su-jmd-020201208/09-lambda/app/lambda_function.py

  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Description: hello aws api gw
      FailOnWarnings: true
      Name: jmd
  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt LambdaFunction.Arn
      Action: 'lambda:InvokeFunction'
      Principal: "apigateway.amazonaws.com"
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*/POST/"
  APIMethod: 
    Type: AWS::ApiGateway::Method
    Properties: 
      HttpMethod: "POST"
      RestApiId: !Ref "ApiGateway"
      ResourceId: !GetAtt "ApiGateway.RootResourceId"
      AuthorizationType: "NONE"
      MethodResponses:
        - StatusCode: 200
      Integration: 
        Type: "AWS"
        Uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LambdaFunction.Arn}/invocations"
        IntegrationHttpMethod: "POST"
        IntegrationResponses:
          - StatusCode: 200
  APIDeployment: 
    DependsOn: APIMethod
    Type: AWS::ApiGateway::Deployment
    Properties: 
      RestApiId: !Ref "ApiGateway"
      StageName: "jmd"
